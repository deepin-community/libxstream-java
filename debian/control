Source: libxstream-java
Section: java
Priority: optional
Maintainer: Debian Java Maintainers <pkg-java-maintainers@lists.alioth.debian.org>
Uploaders:
 Torsten Werner <twerner@debian.org>,
 Varun Hiremath <varun@debian.org>,
 Emmanuel Bourg <ebourg@apache.org>
Build-Depends:
 debhelper-compat (= 13),
 default-jdk,
 javahelper,
 libbuild-helper-maven-plugin-java,
 libcglib-nodep-java,
 libdom4j-java,
 libjaxb-api-java,
 libjdom1-java,
 libjdom2-java,
 libjettison-java,
 libjoda-time-java,
 libkxml2-java,
 libmaven-bundle-plugin-java,
 libstax2-api-java,
 libwoodstox-java,
 libxom-java,
 libxpp3-java,
 maven-debian-helper
Standards-Version: 4.6.0
Vcs-Git: https://salsa.debian.org/java-team/libxstream-java.git
Vcs-Browser: https://salsa.debian.org/java-team/libxstream-java
Homepage: https://x-stream.github.io
Rules-Requires-Root: no

Package: libxstream-java
Architecture: all
Depends: ${maven:Depends}, ${misc:Depends}, libxpp3-java
Suggests: ${maven:OptionalDepends}
Description: Java library to serialize objects to XML and back again
 The features of the XStream library are:
 .
  - Ease of use. A high level facade is supplied that simplifies common
    use cases.
  - No mappings required. Most objects can be serialized without need
    for specifying mappings.
  - Performance. Speed and low memory footprint are a crucial part of
    the design, making it suitable for large object graphs or systems
    with high message throughput.
  - Clean XML. No information is duplicated that can be obtained via
    reflection. This results in XML that is easier to read for humans
    and more compact than native Java serialization.
  - Requires no modifications to objects. Serializes internal fields,
    including private and final. Supports non-public and inner classes.
    Classes are not required to have default constructor.
  - Full object graph support. Duplicate references encountered in the
    object-model will be maintained. Supports circular references.
  - Integrates with other XML APIs. By implementing an interface,
    XStream can serialize directly to/from any tree structure (not just
    XML).
  - Customizable conversion strategies. Strategies can be registered
    allowing customization of how particular types are represented as
    XML.
  - Error messages. When an exception occurs due to malformed XML,
    detailed diagnostics are provided to help isolate and fix the
    problem.
  - Alternative output format. The modular design allows other output
    formats. XStream ships currently with JSON support and morphing.
